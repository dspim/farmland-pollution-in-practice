{
    "collab_server" : "",
    "contents" : "---\ntitle: \"農地重金屬污染潛勢分析實作 by R\"\nauthor: \"Ting-An Jiang, Yu Ying Han, Johnson Hsieh\"\ndate: \"2017年11月25日\"\noutput:\n  html_document:\n    css: styles.css\n    fig_height: 6\n    fig_width: 4\n    theme: spacelab\n    toc: true\n    toc_float: \n      collapsed: false\n      smooth_scroll: true\n---\n\n```{r setup, include=FALSE}\n# install.packages(\"knitr\")\nknitr::opts_chunk$set(echo = TRUE,                      \n                      warning=FALSE,\n                      message=FALSE,\n                      out.width ='500px',\n                      out.height ='500px')\n```\n\n## 載入實作練習包\n- 先確認您的電腦安裝了[R](http://cran.csie.ntu.edu.tw/) 與 [R studio](https://www.rstudio.com/products/rstudio/download/#download)\n- 將請到本頁面中點選下載zip，將課程包下載到自己的電腦中\n- 解開壓縮後點擊 fpp.Rproj 已開啟實作練習教材\n\n\n## 新增一個R專案 (.Rproj)\n\n- 打開R studio，建立一個新專案，指定路徑到你的工作路徑\n![](src/建立新專案1.png)\n![](src/建立新專案2.png)\n\n##   資料下載與匯入\n\n- 將資料下載下來，儲存到自己的工作目錄\n- 使用 `read.csv` 匯入資料\n- 建議把游標移到`\" \"` (雙引號) 裡面按Tab鍵選取檔案\n```{r}\n\nurl_EPA <- \nurl_TARI\n\ndownload.file(url_EPA, destfile = \"環保署列管污染農地_big5.csv\")\ndownload.file(url_TARI, destfile = \"農地重金屬超標未列管_big.csv\")\n\ndata_EPA <- read.csv(\"環保署列管污染農地_big5.csv\", fileEncoding = \"big5\")\ndata_TARI <- read.csv(\"農地重金屬超標未列管_big.csv\", fileEncoding = \"big5\")\n```\n\n---\n\n##PART1--環保署資料 (2016) 實作\n\n\n### **1.使用dplyr 套件重現敘述統計表**\n \n```{r}\n# install.packages(\"dplyr\")\nlibrary(dplyr)\n#因為沒有全部要用，擷取需要用到的資訊，並另外命名為英文\ndata_EPA <- data_EPA %>% select(county=1, coordinate=3, area=7, control_date=8, free_date=10)\n\nsummarise_data <- data_EPA %>% group_by(county) %>% \n  summarise(count = n(), \n            sum_area = sum(area), \n            control_area = sum(area[free_date==\"無\"]), \n            free_area = sum(area[free_date!=\"無\"]), \n            count_control = sum(free_date==\"無\"), \n            count_free = sum(free_date!=\"無\")) %>% \n  mutate(avg_area = sum_area/count, \n         ratio_control = sprintf(\"%1.0f%%\",count_control/count*100),\n         ratio_free = sprintf(\"%1.0f%%\",count_free/count*100))\n```\n\n### **2.計算平均列管月份**\n\n```{r}\n#把列管時間轉成日期格式\ndata_EPA$control_date <- data_EPA$control_date %>% as.Date()\ndata_EPA$free_date <- data_EPA$free_date %>% as.Date()\n#把尚未解除列管的時間帶資料收集截止時間\"2016-12-18\"，以便計算列管時間\ndata_EPA$free_date <- replace(data_EPA$free_date,which(is.na(data_EPA$free_date)),as.Date(\"2016-12-18\"))\n\n#計算列管月份\ndata_EPA$totol_month <- NA\nfor(i in 1:nrow(data_EPA)){\n  tryCatch({ #因為資料裡有其中一筆沒有列管時間，我們加tryCatch讓他忽略錯誤，讓迴圈可以正常執行完\n  data_EPA$totol_month[i] <- \n    length(seq(from=data_EPA$control_date[i], to=data_EPA$free_date[i], by='month')) \n  }, error=function(e){})\n}\n\n#計算各縣市列管中與解除列管的平均列管月份\navg_month <- data_EPA %>% group_by(county) %>% \n  summarise(control_month = mean(totol_month[free_date==\"2016-12-18\"]) %>% round(), \n            free_month = mean(totol_month[free_date!=\"2016-12-18\"],na.rm = TRUE)%>% \n              round()) #因為資料中有一筆沒有列管時間，因此把參數na.rm改為TRUE，才可以運算\n\n#把無列管中的平均月份帶0\navg_month[is.na(avg_month)] <- 0\n\n#合併回summarise_data\nsummarise_data <- summarise_data %>% left_join(avg_month, by=\"county\")\n```\n\n### **3.計算全國加總**\n```{r}\ntmp <- colSums(summarise_data[,2:8]) %>% t() %>% as.data.frame() %>% \n  mutate(ratio_control = sprintf(\"%1.0f%%\",count_control/count*100),\n         ratio_free = sprintf(\"%1.0f%%\",count_free/count*100)) %>% \n  cbind(.,colMeans(summarise_data[,11:12])%>% round() %>% t() %>% as.data.frame()) %>%\n  mutate(county=\"全國\") %>% \n  select(12,1:11)\nsummarise_data <- rbind(tmp, summarise_data)\n```\n\n\n\n```{r echo=FALSE}\n# install.packages(\"kableExtra\")\nsummarise_data %>% knitr::kable(.,format = \"html\") %>% kableExtra::kable_styling(bootstrap_options = \"striped\", font_size = 12) %>% kableExtra::scroll_box(width = \"750px\", height = \"350px\")\n```\n\n### **4.使用plotly 套件繪製統計圖表**\n\n- Bar Chart\n```{r out.height ='400px'}\n# install.packages(\"plotly\")\nlibrary(plotly)\n\nplot_ly( summarise_data, x = ~county, y = ~count_control, type = \"bar\") %>% \n  layout(title = \"所有案件\",\n         xaxis = list(title = 'county'),\n         yaxis = list(title = 'count'),\n         width = 750, height = 400)\n```\n\n- Grouped Bar Chart\n- with Hover Text and Rotated Labels\n```{r out.height ='400px'}\nplot_ly(summarise_data, x = ~county, y = ~count_control, type = 'bar',\n        name = '列管案件', text = ~ratio_control) %>%\n  add_trace(y = ~count_free, name = '解除列管案件', text = ~ratio_free) %>%\n  layout(xaxis = list(title = \"\", tickangle = -45), \n         yaxis = list(title = 'count'), barmode = 'group',\n         width = 800, height = 400)\n```\n\n- Pie Chart\n```{r fig.height = 4, fig.width = 4}\n#列管縣市太多，很多面積很小，取場址面積大於中位數的來畫圖\nsummarise_data1 <- summarise_data %>% arrange(sum_area %>% desc) %>% filter(sum_area > median(sum_area))\nplot_ly(summarise_data1, labels = ~county, values = ~sum_area, type = 'pie',\n        textinfo = 'label+percent') %>% layout(title = '場址面積總和',  width = 800, height = 500,\n                                               margin=list(l = 100, r = 50, b = 100,t = 100,pad = 4))\n```\n\n### **5.場址座標轉經緯度**\n\n- 將經緯度資訊從TWD07轉為WGS84\n\n- 先下載[轉碼程式包](https://github.com/snexuz/TWD97TM2toWGS84)並執行\n```{r echo=FALSE, results='hide'}\nTWD97TM2toWGS84 <- function (input_lat, input_lon){  \n  # input_lat: TWD97橫座標, 南北緯度, latitude N\n  # input_lon: TWD97縱座標, 東西經度, longitude E\n  input_lat <- input_lat %>% as.character %>% as.numeric()\n  input_lon <- input_lon %>% as.character %>% as.numeric()\n  \n  a = 6378137.0\n  b = 6356752.314245\n  lon0 = 121 * pi / 180\n  k0 = 0.9999\n  dx = 250000\n  dy = 0\n  e = (1 - b^2 / a^2)^0.5\n  x =  input_lat - dx # input_lat: TWD97橫座標, 緯度, latitude\n  y =  input_lon - dy # input_lon: TWD97縱座標, 經度, longitude\n  M = y/k0\n  mu = M/(a*(1.0 - ( e**2 )/4.0 - 3* (e**4)/64.0 - 5* (e**6)/256.0))\n  e1 = (1.0 -  ((1.0 -  (e**2))**0.5)) / (1.0 +  ((1.0 -  (e**2))**0.5))\n  J1 = (3*e1/2 - 27* (e1**3)/32.0)\n  J2 = (21* (e1**2)/16 - 55* (e1**4)/32.0)\n  J3 = (151* (e1**3)/96.0)\n  J4 = (1097* (e1**4)/512.0)\n  fp = mu + J1*sin(2*mu) + J2*sin(4*mu) + J3*sin(6*mu) + J4*sin(8*mu)\n  e2 =  ((e*a/b)**2)\n  C1 =  (e2*cos(fp)**2)\n  T1 =  (tan(fp)**2)\n  R1 = a*(1- (e**2))/ ((1- (e**2)* (sin(fp)**2))**(3.0/2.0))\n  N1 = a/ ((1- (e**2)* (sin(fp)**2))**0.5)\n  D = x/(N1*k0)\n  \n  #緯度計算 latitude\n  Q1 = N1*tan(fp)/R1\n  Q2 = ( (D**2)/2.0)\n  Q3 = (5 + 3*T1 + 10*C1 - 4* (C1**2) - 9*e2)* (D**4)/24.0\n  Q4 = (61 + 90*T1 + 298*C1 + 45* (T1**2) - 3* (C1**2) - 252*e2)* (D**6)/720.0\n  lat = fp - Q1*(Q2 - Q3 + Q4)\n  \n  #經度計算 longitude\n  Q5 = D\n  Q6 = (1 + 2*T1 + C1)* (D**3)/6\n  Q7 = (5 - 2*C1 + 28*T1 - 3* (C1**2) + 8*e2 + 24* (T1**2))* (D**5)/120.0\n  lon = lon0 + (Q5 - Q6 + Q7)/cos(fp)\n  lat = (lat*180) /pi #南北緯度  latitude \n  lon = (lon*180)/ pi #東西經度  longitude\n  WGS = list(lat = lat, lon = lon)\n  return(WGS)\n}\n```\n\n- 把經緯度資訊抓出來，分割成x軸與y軸\n```{r}\nhead(data_EPA,3) #可以看到座標欄位裡面有：和，\nTWD97 <- data_EPA$coordinate %>% as.character() %>% \n  stringr::str_split(.,'[，：]',simplify = TRUE) %>% \n  as.data.frame(., stringsAsFactors=FALSE) %>% select(x=2,y=4) \n```\n\n- 利用轉碼函式將TWD97座標轉成經緯度座標系統\n```{r}\nWGS84 <- TWD97TM2toWGS84(TWD97$x, TWD97$y) %>% as.data.frame()\n\n#合併回原本的data\ndata_EPA$coordinate <- NULL\ndata_EPA <- cbind(data_EPA,TWD97,WGS84)\nhead(data_EPA)\n```\n\n---\n\n##PART2--農試所資料實作\n\n### **1.重金屬轉換公式**\n```{r}\ndata_TARI <- data_TARI %>% mutate(CUAR= 2.035*CU + 11.884,\n                     CUAR_OVER = ifelse(CUAR>200,1,0),\n                     ZNAR = 2.487*ZN + 89.711,\n                     ZNAR_OVER = ifelse(ZNAR>600,1,0),\n                     CDAR = 1.4578 *CD + 0.0323,\n                     CDAR_OVER = ifelse(CDAR>5,1,0),\n                     CRAR = 17.35 * CR+ 31.91,\n                     CRAR_OVER = ifelse(CRAR>250,1,0),\n                     NIAR = 5.13 * NI+ 14.56,\n                     NIAR_OVER = ifelse(NIAR>200,1,0),\n                     PBAR = 2.811 *PB+ 6.715,\n                     PBAR_OVER = ifelse(PBAR>500,1,0),\n                     OVER = ifelse(CUAR_OVER+ZNAR_OVER+CDAR_OVER+CRAR_OVER+\n                                     NIAR_OVER+PBAR_OVER>=1,1,0))\n\n```\n\n### **2.計算農地樣區是否有超標情形**\n\n```{r}\ndata_EPA_monitor<- data_EPA%>% filter(free_date==\"2016-12-18\")\nfor(i in 1:nrow(data_TARI)){\n  data_TARI$mindistance[i]= min(na.exclude(sqrt((data_TARI$XLO[i]-as.integer(data_EPA_monitor$x))^2+(data_TARI$YLO[i]-as.integer(data_EPA_monitor$y))^2)))\n}\n\nfor(i in 1:nrow(data_TARI)){\n  data_TARI$minover[i] <- sum(na.exclude(sqrt((data_TARI$XLO[i]-data_TARI$XLO)^2+(data_TARI$YLO[i]-data_TARI$YLO)^2))<=1000)\n}\n\ndata_TARI <- data_TARI %>% mutate(Is_monitored=ifelse(mindistance<=200,1,0))\n```\n\n\n### **3.與環保署的資料合併，計算統計指標**\n\n```{r}\nlibrary(scales)\nstat_over <- data_TARI %>% group_by(V2) %>%\n  summarise(`重金屬超標`=sum(OVER),\n            `超標未列管`=sum(ifelse(OVER+Is_monitored==1,1,0))) %>%\n  mutate(`超標未列管比例`=percent(`超標未列管`/`重金屬超標`),\n         `超標列管比例`=percent(1-`超標未列管`/`重金屬超標`))\n\n```\n\n---\n\n##PART3--用leaflet畫地圖\n\n### 地圖一：兩份資料交叉比對\n\n```{r　out.width ='600px', out.height ='700px'}\n# install.packages(\"leaflet\")\nlibrary(leaflet)\n\n#先把要點上圖的資料篩選出來\nEPA <- data_EPA %>% filter(free_date==\"2016-12-18\") %>% select(lat,lon,area)\nTARI <- data_TARI %>% select(lat = Y,lon = X, area = AREA)\n\n\nleaflet() %>% setView(lng=120.58,lat=23.58,zoom=8) %>% \n  addProviderTiles(\"Esri.WorldImagery\") %>%\n  addCircles(data = EPA, color = \"red\",lng = ~lon, lat = ~lat, weight = 1, radius = ~sqrt(area/pi)) %>%\n  addCircles(data = TARI, color = \"yellow\",lng = ~lon, lat = ~lat, weight = 1, radius = ~sqrt(area/pi))\n \n```\n\n### 地圖二：用log(mindistance)畫地圖\n\n```{r out.width ='600px', out.height ='700px'}\nTARI <- data_TARI %>% select(lat = Y,lon = X, area = AREA ,mindistance) %>% mutate(log_mindistance=log(mindistance))\n\nleaflet() %>% \n  addCircles(data=TARI,lng = ~lon, lat = ~lat, weight = 2,\n             color=~colorNumeric(c(\"#CD0000\", \"#FFFFFF\",\"#0B752F\"),\n                                 log_mindistance)(log_mindistance)) %>% \n  addProviderTiles(providers$CartoDB.Positron) %>% \n  addLegend(position = 'topleft',\n            pal =colorNumeric(c(\"#CD0000\",\"#FFFFFF\",\"#0B752F\"),\n                              domain=TARI$log_mindistance),\n            values=TARI$log_mindistance,\n            title = 'log-mindistance')\n```",
    "created" : 1511528710141.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3206178779",
    "id" : "40CB44F",
    "lastKnownWriteTime" : 1511530874,
    "last_content_update" : 1511530874389,
    "path" : "/Volumes/MySanDisk/DSP/Training/資料專案全面啟動 R/code.rmd",
    "project_path" : "code.rmd",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}